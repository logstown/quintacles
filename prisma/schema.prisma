// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String     @id @unique
  username    String     @unique
  displayName String?
  photoURL    String?
  createdAt   DateTime   @default(now())
  userLists   UserList[]
}

enum MediaType {
  Movie
  TvShow
  TvEpisode
  Person
}

model UserList {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  lastUserAddedAt DateTime @default(now())

  users User[]

  mediaType            MediaType
  orderedItemIdsString String

  movies     Movie[]
  tvShows    TvShow[]
  tvEpisodes TvEpisode[]

  MovieRestrictions       MovieRestrictions?     @relation(fields: [movieRestrictionsId], references: [id])
  movieRestrictionsId     Int?
  TvShowRestrictions      TvShowRestrictions?    @relation(fields: [tvShowRestrictionsId], references: [id])
  tvShowRestrictionsId    Int?
  TvEpisodeRestrictions   TvEpisodeRestrictions? @relation(fields: [tvEpisodeRestrictionsId], references: [id])
  tvEpisodeRestrictionsId Int?
}

model MovieRestrictions {
  id               Int      @id @default(autoincrement())
  genreId          Int?
  decade           Int?
  isLiveActionOnly Boolean?

  userLists UserList[]
  Person    Person?    @relation(fields: [personId], references: [id])
  personId  Int?
}

model TvShowRestrictions {
  id               Int      @id @default(autoincrement())
  genreId          Int?
  decade           Int?
  isLiveActionOnly Boolean?

  userLists UserList[]
}

model TvEpisodeRestrictions {
  id Int @id @default(autoincrement())

  userLists UserList[]

  TvShow   TvShow @relation(fields: [tvShowId], references: [id])
  tvShowId Int
}

model Movie {
  id           Int      @id @unique
  title        String
  releaseDate  DateTime
  genreIds     Int[]
  overview     String
  backdropPath String?
  posterPath   String?

  userLists UserList[]
}

model TvShow {
  id           Int      @id @unique
  name         String
  firstAirDate DateTime
  genreIds     Int[]
  overview     String
  backdropPath String?
  posterPath   String?

  tvEpisodeRestrictions TvEpisodeRestrictions[]

  userLists UserList[]
}

model TvEpisode {
  id           Int      @id @unique
  name         String
  airDate      DateTime
  seasonNum    Int
  episodeNum   Int
  overview     String
  backdropPath String?

  userLists UserList[]
}

model Person {
  id          Int     @id @unique
  name        String
  profilePath String?

  movieRestrictions MovieRestrictions[]
}
